#!/bin/bash

# Git pre-commit hook for Kotlin FFetch project
# Runs linting and formatting checks before allowing commits

set -e

echo "🔍 Running pre-commit checks..."

# Check if this is an initial commit
if git rev-parse --verify HEAD >/dev/null 2>&1; then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=$(git hash-object -t tree /dev/null)
fi

# Get list of staged Kotlin files
STAGED_KT_FILES=$(git diff --cached --name-only --diff-filter=ACM $against | grep '\.kt$' || true)

if [ -z "$STAGED_KT_FILES" ]; then
    echo "✅ No Kotlin files staged for commit"
    exit 0
fi

echo "📝 Found staged Kotlin files:"
echo "$STAGED_KT_FILES" | sed 's/^/  - /'

# Check if gradlew exists
if [ ! -f "./gradlew" ]; then
    echo "❌ gradlew not found. Please run from project root."
    exit 1
fi

# Make gradlew executable
chmod +x ./gradlew

echo ""
echo "🎨 Running Kotlin formatting check..."
if ! ./gradlew ktlintCheck --quiet; then
    echo ""
    echo "❌ KtLint formatting check failed!"
    echo "💡 Run './gradlew ktlintFormat' to auto-fix formatting issues"
    echo "   Or run './gradlew lintFix' to fix all auto-fixable issues"
    exit 1
fi

echo "✅ Kotlin formatting check passed"

echo ""
echo "🔬 Running static analysis..."
if ! ./gradlew detekt --quiet; then
    echo ""
    echo "❌ Detekt static analysis failed!"
    echo "💡 Review the issues above and fix them before committing"
    echo "   Check detekt.yml for configuration options"
    exit 1
fi

echo "✅ Static analysis passed"

echo ""
echo "🧪 Running tests..."
if ! ./gradlew test --quiet; then
    echo ""
    echo "❌ Tests failed!"
    echo "💡 Fix failing tests before committing"
    exit 1
fi

echo "✅ All tests passed"

echo ""
echo "🎉 All pre-commit checks passed! Proceeding with commit..."