name: Kotlin Build & Test

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: ["**"]

permissions:
  contents: write

jobs:
  test:
    name: Test (Kotlin ${{ matrix.kotlin }}, JDK ${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ["21"]
        kotlin: ["1.9.24"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Lint and Check
        run: ./gradlew check

      - name: Build
        run: ./gradlew build

      - name: Run Tests with Coverage
        run: ./gradlew test jacocoTestReport

      - name: Generate coverage summary
        run: |
          echo "## üìä Code Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Extract coverage from JaCoCo XML report
          if [ -f "build/reports/jacoco/test/jacocoTestReport.xml" ]; then
            COVERAGE=$(grep -o 'missed="[0-9]*".*covered="[0-9]*"' build/reports/jacoco/test/jacocoTestReport.xml | head -1 | sed 's/missed="\([0-9]*\)".*covered="\([0-9]*\)"/\1 \2/' | awk '{printf "%.2f", ($2/($1+$2))*100}')
            echo "### Overall Coverage: ${COVERAGE}%" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "üìÅ [View detailed HTML report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è Coverage report not found" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests
          name: KoffetchCoverage
          fail_ci_if_error: false
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Coverage Gate
        run: |
          # Extract overall coverage percentage from JaCoCo XML
          if [ -f "build/reports/jacoco/test/jacocoTestReport.xml" ]; then
            MISSED=$(grep -o 'missed="[0-9]*"' build/reports/jacoco/test/jacocoTestReport.xml | head -1 | grep -o '[0-9]*')
            COVERED=$(grep -o 'covered="[0-9]*"' build/reports/jacoco/test/jacocoTestReport.xml | head -1 | grep -o '[0-9]*')
            COVERAGE=$(echo "scale=2; ($COVERED/($MISSED+$COVERED))*100" | bc -l)
          else
            echo "‚ùå Coverage report not found"
            exit 1
          fi

          echo "Overall test coverage: $COVERAGE%"

          # Set minimum coverage threshold (95%)
          THRESHOLD=95.0

          if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
            echo "‚ùå Coverage $COVERAGE% is below threshold $THRESHOLD%"
            exit 1
          else
            echo "‚úÖ Coverage $COVERAGE% meets threshold $THRESHOLD%"
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-jdk${{ matrix.java }}
          path: |
            build/reports/tests/test/
            build/reports/jacoco/test/

  update-badge:
    name: Update Vibe Coded Badge
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip vibe-badge]')"
    needs: [test]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: trieloff/vibe-coded-badge-action@main